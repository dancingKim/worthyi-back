spring:
  config:
    import: "aws-secretsmanager:/WorthyI/dev" # AWS Secrets Manager에서 설정 가져오기
  security:
    oauth2:
      client:
        registration:
          apple:
            client-id: ${APPLE_CLIENT_ID} # Apple OAuth2 클라이언트 ID
            client-secret: ${APPLE_CLIENT_SECRET} # Apple OAuth2 클라이언트 비밀
            scope: openid, name, email # Apple에서 요청할 범위
            redirect-uri: "https://api-dev.worthyilife.com/login/oauth2/code/{registrationId}" # Apple OAuth2 리디렉션 URI
            authorization-grant-type: authorization_code # OAuth2 인증 코드 그랜트 타입
            client-authentication-method: post # 클라이언트 인증 방법
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "https://api-dev.worthyilife.com/login/oauth2/code/google"
            scope:
              - email
              - profile
        provider:
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token
            user-info-uri: https://appleid.apple.com
            user-name-attribute: sub
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth # Google 인증 URI
            token-uri: https://oauth2.googleapis.com/token # Google 토큰 URI
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo # Google 사용자 정보 URI
            user-name-attribute: sub # 사용자 이름 속성
  datasource:
    driver-class-name: org.postgresql.Driver # PostgreSQL 드라이버 클래스
    url: jdbc:postgresql://${DB_URL} # 데이터베이스 URL
    username: ${DB_USERNAME} # 데이터베이스 사용자 이름
    password: ${DB_PASSWORD} # 데이터베이스 비밀번호
logging:
  level:
    root: DEBUG # 루트 로깅 레벨을 DEBUG로 설정

apple:
  url: https://appleid.apple.com